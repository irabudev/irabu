/*!
 * Bootstrap v4.4.1 (https://getbootstrap.com/)
 * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
!(function (t, e) {
  typeof exports === "object" && typeof module !== "undefined"
    ? e(exports, require("jquery"), require("popper.js"))
    : typeof define === "function" && define.amd
    ? define(["exports", "jquery", "popper.js"], e)
    : e(((t = t || self).bootstrap = {}), t.jQuery, t.Popper);
})(this, function (t, g, u) {
  
  function i(t, e) {
    for (let n = 0; n < e.length; n++) {
      const i = e[n];
      (i.enumerable = i.enumerable || !1),
        (i.configurable = !0),
        "value" in i && (i.writable = !0),
        Object.defineProperty(t, i.key, i);
    }
  }
  function s(t, e, n) {
    return e && i(t.prototype, e), n && i(t, n), t;
  }
  function e(e, t) {
    const n = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      let i = Object.getOwnPropertySymbols(e);
      t &&
        (i = i.filter(function (t) {
          return Object.getOwnPropertyDescriptor(e, t).enumerable;
        })),
        n.push.apply(n, i);
    }
    return n;
  }
  function l(o) {
    for (let t = 1; t < arguments.length; t++) {
      var r = arguments[t] != null ? arguments[t] : {};
      t % 2
        ? e(Object(r), !0).forEach(function (t) {
            let e; let n; let i;
            (e = o),
              (i = r[(n = t)]),
              n in e
                ? Object.defineProperty(e, n, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                  })
                : (e[n] = i);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(r))
        : e(Object(r)).forEach(function (t) {
            Object.defineProperty(o, t, Object.getOwnPropertyDescriptor(r, t));
          });
    }
    return o;
  }
  (g = g && g.hasOwnProperty("default") ? g.default : g),
    (u = u && u.hasOwnProperty("default") ? u.default : u);
  const n = "transitionend";
  function o(t) {
    const e = this;
      let n = !1;
    return (
      g(this).one(_.TRANSITION_END, function () {
        n = !0;
      }),
      setTimeout(function () {
        n || _.triggerTransitionEnd(e);
      }, t),
      this
    );
  }
  var _ = {
    TRANSITION_END: "bsTransitionEnd",
    getUID (t) {
      for (; (t += ~~(1e6 * Math.random())), document.getElementById(t); );
      return t;
    },
    getSelectorFromElement (t) {
      let e = t.getAttribute("data-target");
      if (!e || e === "#") {
        const n = t.getAttribute("href");
        e = n && n !== "#" ? n.trim() : "";
      }
      try {
        return document.querySelector(e) ? e : null;
      } catch (t) {
        return null;
      }
    },
    getTransitionDurationFromElement (t) {
      if (!t) return 0;
      let e = g(t).css("transition-duration");
        let n = g(t).css("transition-delay");
        const i = parseFloat(e);
        const o = parseFloat(n);
      return i || o
        ? ((e = e.split(",")[0]),
          (n = n.split(",")[0]),
          1e3 * (parseFloat(e) + parseFloat(n)))
        : 0;
    },
    reflow (t) {
      return t.offsetHeight;
    },
    triggerTransitionEnd (t) {
      g(t).trigger(n);
    },
    supportsTransitionEnd () {
      return Boolean(n);
    },
    isElement (t) {
      return (t[0] || t).nodeType;
    },
    typeCheckConfig (t, e, n) {
      for (const i in n)
        if (Object.prototype.hasOwnProperty.call(n, i)) {
          const o = n[i];
            const r = e[i];
            const s =
              r && _.isElement(r)
                ? "element"
                : ((a = r),
                  {}.toString
                    .call(a)
                    .match(/\s([a-z]+)/i)[1]
                    .toLowerCase());
          if (!new RegExp(o).test(s))
            throw new Error(
              `${t.toUpperCase() 
                }: Option "${ 
                i 
                }" provided type "${ 
                s 
                }" but expected type "${ 
                o 
                }".`
            );
        }
      let a;
    },
    findShadowRoot (t) {
      if (!document.documentElement.attachShadow) return null;
      if (typeof t.getRootNode !== "function")
        return t instanceof ShadowRoot
          ? t
          : t.parentNode
          ? _.findShadowRoot(t.parentNode)
          : null;
      const e = t.getRootNode();
      return e instanceof ShadowRoot ? e : null;
    },
    jQueryDetection () {
      if (typeof g === "undefined")
        throw new TypeError(
          "Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript."
        );
      const t = g.fn.jquery.split(" ")[0].split(".");
      if (
        (t[0] < 2 && t[1] < 9) ||
        (t[0] === 1 && t[1] === 9 && t[2] < 1) ||
        t[0] >= 4
      )
        throw new Error(
          "Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0"
        );
    },
  };
  _.jQueryDetection(),
    (g.fn.emulateTransitionEnd = o),
    (g.event.special[_.TRANSITION_END] = {
      bindType: n,
      delegateType: n,
      handle (t) {
        if (g(t.target).is(this))
          return t.handleObj.handler.apply(this, arguments);
      },
    });
  const r = "alert";
    const a = "bs.alert";
    const c = `.${  a}`;
    const h = g.fn[r];
    const f = {
      CLOSE: `close${  c}`,
      CLOSED: `closed${  c}`,
      CLICK_DATA_API: `click${  c  }.data-api`,
    };
    const d = "alert";
    const m = "fade";
    const p = "show";
    const v = (function () {
      function i(t) {
        this._element = t;
      }
      const t = i.prototype;
      return (
        (t.close = function (t) {
          let e = this._element;
          t && (e = this._getRootElement(t)),
            this._triggerCloseEvent(e).isDefaultPrevented() ||
              this._removeElement(e);
        }),
        (t.dispose = function () {
          g.removeData(this._element, a), (this._element = null);
        }),
        (t._getRootElement = function (t) {
          const e = _.getSelectorFromElement(t);
            let n = !1;
          return (
            e && (n = document.querySelector(e)),
            (n = n || g(t).closest(`.${  d}`)[0])
          );
        }),
        (t._triggerCloseEvent = function (t) {
          const e = g.Event(f.CLOSE);
          return g(t).trigger(e), e;
        }),
        (t._removeElement = function (e) {
          const n = this;
          if ((g(e).removeClass(p), g(e).hasClass(m))) {
            const t = _.getTransitionDurationFromElement(e);
            g(e)
              .one(_.TRANSITION_END, function (t) {
                return n._destroyElement(e, t);
              })
              .emulateTransitionEnd(t);
          } else this._destroyElement(e);
        }),
        (t._destroyElement = function (t) {
          g(t).detach().trigger(f.CLOSED).remove();
        }),
        (i._jQueryInterface = function (n) {
          return this.each(function () {
            const t = g(this);
              let e = t.data(a);
            e || ((e = new i(this)), t.data(a, e)), n === "close" && e[n](this);
          });
        }),
        (i._handleDismiss = function (e) {
          return function (t) {
            t && t.preventDefault(), e.close(this);
          };
        }),
        s(i, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
        ]),
        i
      );
    })();
  g(document).on(
    f.CLICK_DATA_API,
    '[data-dismiss="alert"]',
    v._handleDismiss(new v())
  ),
    (g.fn[r] = v._jQueryInterface),
    (g.fn[r].Constructor = v),
    (g.fn[r].noConflict = function () {
      return (g.fn[r] = h), v._jQueryInterface;
    });
  const y = "button";
    const E = "bs.button";
    const C = `.${  E}`;
    const T = ".data-api";
    const b = g.fn[y];
    const S = "active";
    const D = "btn";
    const I = "focus";
    const w = '[data-toggle^="button"]';
    const A = '[data-toggle="buttons"]';
    const N = '[data-toggle="button"]';
    const O = '[data-toggle="buttons"] .btn';
    const k = 'input:not([type="hidden"])';
    const P = ".active";
    const L = ".btn";
    const j = {
      CLICK_DATA_API: `click${  C  }${T}`,
      FOCUS_BLUR_DATA_API: `focus${  C  }${T  } blur${  C  }${T}`,
      LOAD_DATA_API: `load${  C  }${T}`,
    };
    const H = (function () {
      function n(t) {
        this._element = t;
      }
      const t = n.prototype;
      return (
        (t.toggle = function () {
          let t = !0;
            let e = !0;
            const n = g(this._element).closest(A)[0];
          if (n) {
            const i = this._element.querySelector(k);
            if (i) {
              if (i.type === "radio")
                if (i.checked && this._element.classList.contains(S)) t = !1;
                else {
                  const o = n.querySelector(P);
                  o && g(o).removeClass(S);
                }
              else
                i.type === "checkbox"
                  ? this._element.tagName === "LABEL" &&
                    i.checked === this._element.classList.contains(S) &&
                    (t = !1)
                  : (t = !1);
              t &&
                ((i.checked = !this._element.classList.contains(S)),
                g(i).trigger("change")),
                i.focus(),
                (e = !1);
            }
          }
          this._element.hasAttribute("disabled") ||
            this._element.classList.contains("disabled") ||
            (e &&
              this._element.setAttribute(
                "aria-pressed",
                !this._element.classList.contains(S)
              ),
            t && g(this._element).toggleClass(S));
        }),
        (t.dispose = function () {
          g.removeData(this._element, E), (this._element = null);
        }),
        (n._jQueryInterface = function (e) {
          return this.each(function () {
            let t = g(this).data(E);
            t || ((t = new n(this)), g(this).data(E, t)),
              e === "toggle" && t[e]();
          });
        }),
        s(n, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
        ]),
        n
      );
    })();
  g(document)
    .on(j.CLICK_DATA_API, w, function (t) {
      let e = t.target;
      if (
        (g(e).hasClass(D) || (e = g(e).closest(L)[0]),
        !e || e.hasAttribute("disabled") || e.classList.contains("disabled"))
      )
        t.preventDefault();
      else {
        const n = e.querySelector(k);
        if (
          n &&
          (n.hasAttribute("disabled") || n.classList.contains("disabled"))
        )
          return void t.preventDefault();
        H._jQueryInterface.call(g(e), "toggle");
      }
    })
    .on(j.FOCUS_BLUR_DATA_API, w, function (t) {
      const e = g(t.target).closest(L)[0];
      g(e).toggleClass(I, /^focus(in)?$/.test(t.type));
    }),
    g(window).on(j.LOAD_DATA_API, function () {
      for (
        var t = [].slice.call(document.querySelectorAll(O)),
          e = 0,
          n = t.length;
        e < n;
        e++
      ) {
        const i = t[e];
          const o = i.querySelector(k);
        o.checked || o.hasAttribute("checked")
          ? i.classList.add(S)
          : i.classList.remove(S);
      }
      for (
        let r = 0, s = (t = [].slice.call(document.querySelectorAll(N))).length;
        r < s;
        r++
      ) {
        const a = t[r];
        a.getAttribute("aria-pressed") === "true"
          ? a.classList.add(S)
          : a.classList.remove(S);
      }
    }),
    (g.fn[y] = H._jQueryInterface),
    (g.fn[y].Constructor = H),
    (g.fn[y].noConflict = function () {
      return (g.fn[y] = b), H._jQueryInterface;
    });
  const R = "carousel";
    const x = "bs.carousel";
    const F = `.${  x}`;
    const U = ".data-api";
    const W = g.fn[R];
    const q = {
      interval: 5e3,
      keyboard: !0,
      slide: !1,
      pause: "hover",
      wrap: !0,
      touch: !0,
    };
    const M = {
      interval: "(number|boolean)",
      keyboard: "boolean",
      slide: "(boolean|string)",
      pause: "(string|boolean)",
      wrap: "boolean",
      touch: "boolean",
    };
    const K = "next";
    const Q = "prev";
    const B = "left";
    const V = "right";
    const Y = {
      SLIDE: `slide${  F}`,
      SLID: `slid${  F}`,
      KEYDOWN: `keydown${  F}`,
      MOUSEENTER: `mouseenter${  F}`,
      MOUSELEAVE: `mouseleave${  F}`,
      TOUCHSTART: `touchstart${  F}`,
      TOUCHMOVE: `touchmove${  F}`,
      TOUCHEND: `touchend${  F}`,
      POINTERDOWN: `pointerdown${  F}`,
      POINTERUP: `pointerup${  F}`,
      DRAG_START: `dragstart${  F}`,
      LOAD_DATA_API: `load${  F  }${U}`,
      CLICK_DATA_API: `click${  F  }${U}`,
    };
    const z = "carousel";
    const X = "active";
    const $ = "slide";
    const G = "carousel-item-right";
    const J = "carousel-item-left";
    const Z = "carousel-item-next";
    const tt = "carousel-item-prev";
    const et = "pointer-event";
    const nt = ".active";
    const it = ".active.carousel-item";
    const ot = ".carousel-item";
    const rt = ".carousel-item img";
    const st = ".carousel-item-next, .carousel-item-prev";
    const at = ".carousel-indicators";
    const lt = "[data-slide], [data-slide-to]";
    const ct = '[data-ride="carousel"]';
    const ht = { TOUCH: "touch", PEN: "pen" };
    const ut = (function () {
      function r(t, e) {
        (this._items = null),
          (this._interval = null),
          (this._activeElement = null),
          (this._isPaused = !1),
          (this._isSliding = !1),
          (this.touchTimeout = null),
          (this.touchStartX = 0),
          (this.touchDeltaX = 0),
          (this._config = this._getConfig(e)),
          (this._element = t),
          (this._indicatorsElement = this._element.querySelector(at)),
          (this._touchSupported =
            "ontouchstart" in document.documentElement ||
            navigator.maxTouchPoints > 0),
          (this._pointerEvent = Boolean(
            window.PointerEvent || window.MSPointerEvent
          )),
          this._addEventListeners();
      }
      const t = r.prototype;
      return (
        (t.next = function () {
          this._isSliding || this._slide(K);
        }),
        (t.nextWhenVisible = function () {
          !document.hidden &&
            g(this._element).is(":visible") &&
            g(this._element).css("visibility") !== "hidden" &&
            this.next();
        }),
        (t.prev = function () {
          this._isSliding || this._slide(Q);
        }),
        (t.pause = function (t) {
          t || (this._isPaused = !0),
            this._element.querySelector(st) &&
              (_.triggerTransitionEnd(this._element), this.cycle(!0)),
            clearInterval(this._interval),
            (this._interval = null);
        }),
        (t.cycle = function (t) {
          t || (this._isPaused = !1),
            this._interval &&
              (clearInterval(this._interval), (this._interval = null)),
            this._config.interval &&
              !this._isPaused &&
              (this._interval = setInterval(
                (document.visibilityState
                  ? this.nextWhenVisible
                  : this.next
                ).bind(this),
                this._config.interval
              ));
        }),
        (t.to = function (t) {
          const e = this;
          this._activeElement = this._element.querySelector(it);
          const n = this._getItemIndex(this._activeElement);
          if (!(t > this._items.length - 1 || t < 0))
            if (this._isSliding)
              g(this._element).one(Y.SLID, function () {
                return e.to(t);
              });
            else {
              if (n === t) return this.pause(), void this.cycle();
              const i = n < t ? K : Q;
              this._slide(i, this._items[t]);
            }
        }),
        (t.dispose = function () {
          g(this._element).off(F),
            g.removeData(this._element, x),
            (this._items = null),
            (this._config = null),
            (this._element = null),
            (this._interval = null),
            (this._isPaused = null),
            (this._isSliding = null),
            (this._activeElement = null),
            (this._indicatorsElement = null);
        }),
        (t._getConfig = function (t) {
          return (t = l({}, q, {}, t)), _.typeCheckConfig(R, t, M), t;
        }),
        (t._handleSwipe = function () {
          const t = Math.abs(this.touchDeltaX);
          if (!(t <= 40)) {
            const e = t / this.touchDeltaX;
            (this.touchDeltaX = 0) < e && this.prev(), e < 0 && this.next();
          }
        }),
        (t._addEventListeners = function () {
          const e = this;
          this._config.keyboard &&
            g(this._element).on(Y.KEYDOWN, function (t) {
              return e._keydown(t);
            }),
            this._config.pause === "hover" &&
              g(this._element)
                .on(Y.MOUSEENTER, function (t) {
                  return e.pause(t);
                })
                .on(Y.MOUSELEAVE, function (t) {
                  return e.cycle(t);
                }),
            this._config.touch && this._addTouchEventListeners();
        }),
        (t._addTouchEventListeners = function () {
          const e = this;
          if (this._touchSupported) {
            const n = function (t) {
                e._pointerEvent && ht[t.originalEvent.pointerType.toUpperCase()]
                  ? (e.touchStartX = t.originalEvent.clientX)
                  : e._pointerEvent ||
                    (e.touchStartX = t.originalEvent.touches[0].clientX);
              };
              const i = function (t) {
                e._pointerEvent &&
                  ht[t.originalEvent.pointerType.toUpperCase()] &&
                  (e.touchDeltaX = t.originalEvent.clientX - e.touchStartX),
                  e._handleSwipe(),
                  e._config.pause === "hover" &&
                    (e.pause(),
                    e.touchTimeout && clearTimeout(e.touchTimeout),
                    (e.touchTimeout = setTimeout(function (t) {
                      return e.cycle(t);
                    }, 500 + e._config.interval)));
              };
            g(this._element.querySelectorAll(rt)).on(
              Y.DRAG_START,
              function (t) {
                return t.preventDefault();
              }
            ),
              this._pointerEvent
                ? (g(this._element).on(Y.POINTERDOWN, function (t) {
                    return n(t);
                  }),
                  g(this._element).on(Y.POINTERUP, function (t) {
                    return i(t);
                  }),
                  this._element.classList.add(et))
                : (g(this._element).on(Y.TOUCHSTART, function (t) {
                    return n(t);
                  }),
                  g(this._element).on(Y.TOUCHMOVE, function (t) {
                    return (function (t) {
                      t.originalEvent.touches &&
                      t.originalEvent.touches.length > 1
                        ? (e.touchDeltaX = 0)
                        : (e.touchDeltaX =
                            t.originalEvent.touches[0].clientX - e.touchStartX);
                    })(t);
                  }),
                  g(this._element).on(Y.TOUCHEND, function (t) {
                    return i(t);
                  }));
          }
        }),
        (t._keydown = function (t) {
          if (!/input|textarea/i.test(t.target.tagName))
            switch (t.which) {
              case 37:
                t.preventDefault(), this.prev();
                break;
              case 39:
                t.preventDefault(), this.next();
            }
        }),
        (t._getItemIndex = function (t) {
          return (
            (this._items =
              t && t.parentNode
                ? [].slice.call(t.parentNode.querySelectorAll(ot))
                : []),
            this._items.indexOf(t)
          );
        }),
        (t._getItemByDirection = function (t, e) {
          const n = t === K;
            const i = t === Q;
            const o = this._getItemIndex(e);
            const r = this._items.length - 1;
          if (((i && o === 0) || (n && o === r)) && !this._config.wrap)
            return e;
          const s = (o + (t === Q ? -1 : 1)) % this._items.length;
          return s == -1 ? this._items[this._items.length - 1] : this._items[s];
        }),
        (t._triggerSlideEvent = function (t, e) {
          const n = this._getItemIndex(t);
            const i = this._getItemIndex(this._element.querySelector(it));
            const o = g.Event(Y.SLIDE, {
              relatedTarget: t,
              direction: e,
              from: i,
              to: n,
            });
          return g(this._element).trigger(o), o;
        }),
        (t._setActiveIndicatorElement = function (t) {
          if (this._indicatorsElement) {
            const e = [].slice.call(this._indicatorsElement.querySelectorAll(nt));
            g(e).removeClass(X);
            const n = this._indicatorsElement.children[this._getItemIndex(t)];
            n && g(n).addClass(X);
          }
        }),
        (t._slide = function (t, e) {
          let n;
            let i;
            let o;
            const r = this;
            const s = this._element.querySelector(it);
            const a = this._getItemIndex(s);
            const l = e || (s && this._getItemByDirection(t, s));
            const c = this._getItemIndex(l);
            const h = Boolean(this._interval);
          if (
            ((o = t === K ? ((n = J), (i = Z), B) : ((n = G), (i = tt), V)),
            l && g(l).hasClass(X))
          )
            this._isSliding = !1;
          else if (
            !this._triggerSlideEvent(l, o).isDefaultPrevented() &&
            s &&
            l
          ) {
            (this._isSliding = !0),
              h && this.pause(),
              this._setActiveIndicatorElement(l);
            const u = g.Event(Y.SLID, {
              relatedTarget: l,
              direction: o,
              from: a,
              to: c,
            });
            if (g(this._element).hasClass($)) {
              g(l).addClass(i), _.reflow(l), g(s).addClass(n), g(l).addClass(n);
              const f = parseInt(l.getAttribute("data-interval"), 10);
              f
                ? ((this._config.defaultInterval =
                    this._config.defaultInterval || this._config.interval),
                  (this._config.interval = f))
                : (this._config.interval =
                    this._config.defaultInterval || this._config.interval);
              const d = _.getTransitionDurationFromElement(s);
              g(s)
                .one(_.TRANSITION_END, function () {
                  g(l)
                    .removeClass(`${n  } ${  i}`)
                    .addClass(X),
                    g(s).removeClass(`${X  } ${  i  } ${  n}`),
                    (r._isSliding = !1),
                    setTimeout(function () {
                      return g(r._element).trigger(u);
                    }, 0);
                })
                .emulateTransitionEnd(d);
            } else
              g(s).removeClass(X),
                g(l).addClass(X),
                (this._isSliding = !1),
                g(this._element).trigger(u);
            h && this.cycle();
          }
        }),
        (r._jQueryInterface = function (i) {
          return this.each(function () {
            let t = g(this).data(x);
              let e = l({}, q, {}, g(this).data());
            typeof i === "object" && (e = l({}, e, {}, i));
            const n = typeof i === "string" ? i : e.slide;
            if (
              (t || ((t = new r(this, e)), g(this).data(x, t)),
              typeof i === "number")
            )
              t.to(i);
            else if (typeof n === "string") {
              if (typeof t[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              t[n]();
            } else e.interval && e.ride && (t.pause(), t.cycle());
          });
        }),
        (r._dataApiClickHandler = function (t) {
          const e = _.getSelectorFromElement(this);
          if (e) {
            const n = g(e)[0];
            if (n && g(n).hasClass(z)) {
              const i = l({}, g(n).data(), {}, g(this).data());
                const o = this.getAttribute("data-slide-to");
              o && (i.interval = !1),
                r._jQueryInterface.call(g(n), i),
                o && g(n).data(x).to(o),
                t.preventDefault();
            }
          }
        }),
        s(r, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return q;
            },
          },
        ]),
        r
      );
    })();
  g(document).on(Y.CLICK_DATA_API, lt, ut._dataApiClickHandler),
    g(window).on(Y.LOAD_DATA_API, function () {
      for (
        let t = [].slice.call(document.querySelectorAll(ct)),
          e = 0,
          n = t.length;
        e < n;
        e++
      ) {
        const i = g(t[e]);
        ut._jQueryInterface.call(i, i.data());
      }
    }),
    (g.fn[R] = ut._jQueryInterface),
    (g.fn[R].Constructor = ut),
    (g.fn[R].noConflict = function () {
      return (g.fn[R] = W), ut._jQueryInterface;
    });
  const ft = "collapse";
    const dt = "bs.collapse";
    const gt = `.${  dt}`;
    const _t = g.fn[ft];
    const mt = { toggle: !0, parent: "" };
    const pt = { toggle: "boolean", parent: "(string|element)" };
    const vt = {
      SHOW: `show${  gt}`,
      SHOWN: `shown${  gt}`,
      HIDE: `hide${  gt}`,
      HIDDEN: `hidden${  gt}`,
      CLICK_DATA_API: `click${  gt  }.data-api`,
    };
    const yt = "show";
    const Et = "collapse";
    const Ct = "collapsing";
    const Tt = "collapsed";
    const bt = "width";
    const St = "height";
    const Dt = ".show, .collapsing";
    const It = '[data-toggle="collapse"]';
    const wt = (function () {
      function a(e, t) {
        (this._isTransitioning = !1),
          (this._element = e),
          (this._config = this._getConfig(t)),
          (this._triggerArray = [].slice.call(
            document.querySelectorAll(
              `[data-toggle="collapse"][href="#${ 
                e.id 
                }"],[data-toggle="collapse"][data-target="#${ 
                e.id 
                }"]`
            )
          ));
        for (
          let n = [].slice.call(document.querySelectorAll(It)),
            i = 0,
            o = n.length;
          i < o;
          i++
        ) {
          const r = n[i];
            const s = _.getSelectorFromElement(r);
            const a = [].slice
              .call(document.querySelectorAll(s))
              .filter(function (t) {
                return t === e;
              });
          s !== null &&
            a.length > 0 &&
            ((this._selector = s), this._triggerArray.push(r));
        }
        (this._parent = this._config.parent ? this._getParent() : null),
          this._config.parent ||
            this._addAriaAndCollapsedClass(this._element, this._triggerArray),
          this._config.toggle && this.toggle();
      }
      const t = a.prototype;
      return (
        (t.toggle = function () {
          g(this._element).hasClass(yt) ? this.hide() : this.show();
        }),
        (t.show = function () {
          let t;
            let e;
            const n = this;
          if (
            !this._isTransitioning &&
            !g(this._element).hasClass(yt) &&
            (this._parent &&
              (t = [].slice
                  .call(this._parent.querySelectorAll(Dt))
                  .filter(function (t) {
                    return typeof n._config.parent === "string"
                      ? t.getAttribute("data-parent") === n._config.parent
                      : t.classList.contains(Et);
                  })).length ===
                0 &&
              (t = null),
            !(
              t &&
              (e = g(t).not(this._selector).data(dt)) &&
              e._isTransitioning
            ))
          ) {
            const i = g.Event(vt.SHOW);
            if ((g(this._element).trigger(i), !i.isDefaultPrevented())) {
              t &&
                (a._jQueryInterface.call(g(t).not(this._selector), "hide"),
                e || g(t).data(dt, null));
              const o = this._getDimension();
              g(this._element).removeClass(Et).addClass(Ct),
                (this._element.style[o] = 0),
                this._triggerArray.length &&
                  g(this._triggerArray)
                    .removeClass(Tt)
                    .attr("aria-expanded", !0),
                this.setTransitioning(!0);
              const r = `scroll${  o[0].toUpperCase() + o.slice(1)}`;
                const s = _.getTransitionDurationFromElement(this._element);
              g(this._element)
                .one(_.TRANSITION_END, function () {
                  g(n._element).removeClass(Ct).addClass(Et).addClass(yt),
                    (n._element.style[o] = ""),
                    n.setTransitioning(!1),
                    g(n._element).trigger(vt.SHOWN);
                })
                .emulateTransitionEnd(s),
                (this._element.style[o] = `${this._element[r]  }px`);
            }
          }
        }),
        (t.hide = function () {
          const t = this;
          if (!this._isTransitioning && g(this._element).hasClass(yt)) {
            const e = g.Event(vt.HIDE);
            if ((g(this._element).trigger(e), !e.isDefaultPrevented())) {
              const n = this._getDimension();
              (this._element.style[n] =
                `${this._element.getBoundingClientRect()[n]  }px`),
                _.reflow(this._element),
                g(this._element).addClass(Ct).removeClass(Et).removeClass(yt);
              const i = this._triggerArray.length;
              if (i > 0)
                for (let o = 0; o < i; o++) {
                  const r = this._triggerArray[o];
                    const s = _.getSelectorFromElement(r);
                  if (s !== null)
                    g([].slice.call(document.querySelectorAll(s))).hasClass(
                      yt
                    ) || g(r).addClass(Tt).attr("aria-expanded", !1);
                }
              this.setTransitioning(!0);
              this._element.style[n] = "";
              const a = _.getTransitionDurationFromElement(this._element);
              g(this._element)
                .one(_.TRANSITION_END, function () {
                  t.setTransitioning(!1),
                    g(t._element)
                      .removeClass(Ct)
                      .addClass(Et)
                      .trigger(vt.HIDDEN);
                })
                .emulateTransitionEnd(a);
            }
          }
        }),
        (t.setTransitioning = function (t) {
          this._isTransitioning = t;
        }),
        (t.dispose = function () {
          g.removeData(this._element, dt),
            (this._config = null),
            (this._parent = null),
            (this._element = null),
            (this._triggerArray = null),
            (this._isTransitioning = null);
        }),
        (t._getConfig = function (t) {
          return (
            ((t = l({}, mt, {}, t)).toggle = Boolean(t.toggle)),
            _.typeCheckConfig(ft, t, pt),
            t
          );
        }),
        (t._getDimension = function () {
          return g(this._element).hasClass(bt) ? bt : St;
        }),
        (t._getParent = function () {
          let t;
            const n = this;
          _.isElement(this._config.parent)
            ? ((t = this._config.parent),
              typeof this._config.parent.jquery !== "undefined" &&
                (t = this._config.parent[0]))
            : (t = document.querySelector(this._config.parent));
          const e =
              `[data-toggle="collapse"][data-parent="${ 
              this._config.parent 
              }"]`;
            const i = [].slice.call(t.querySelectorAll(e));
          return (
            g(i).each(function (t, e) {
              n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [e]);
            }),
            t
          );
        }),
        (t._addAriaAndCollapsedClass = function (t, e) {
          const n = g(t).hasClass(yt);
          e.length && g(e).toggleClass(Tt, !n).attr("aria-expanded", n);
        }),
        (a._getTargetFromElement = function (t) {
          const e = _.getSelectorFromElement(t);
          return e ? document.querySelector(e) : null;
        }),
        (a._jQueryInterface = function (i) {
          return this.each(function () {
            const t = g(this);
              let e = t.data(dt);
              const n = l(
                {},
                mt,
                {},
                t.data(),
                {},
                typeof i === "object" && i ? i : {}
              );
            if (
              (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1),
              e || ((e = new a(this, n)), t.data(dt, e)),
              typeof i === "string")
            ) {
              if (typeof e[i] === "undefined")
                throw new TypeError(`No method named "${  i  }"`);
              e[i]();
            }
          });
        }),
        s(a, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return mt;
            },
          },
        ]),
        a
      );
    })();
  g(document).on(vt.CLICK_DATA_API, It, function (t) {
    t.currentTarget.tagName === "A" && t.preventDefault();
    const n = g(this);
      const e = _.getSelectorFromElement(this);
      const i = [].slice.call(document.querySelectorAll(e));
    g(i).each(function () {
      const t = g(this);
        const e = t.data(dt) ? "toggle" : n.data();
      wt._jQueryInterface.call(t, e);
    });
  }),
    (g.fn[ft] = wt._jQueryInterface),
    (g.fn[ft].Constructor = wt),
    (g.fn[ft].noConflict = function () {
      return (g.fn[ft] = _t), wt._jQueryInterface;
    });
  const At = "dropdown";
    const Nt = "bs.dropdown";
    const Ot = `.${  Nt}`;
    const kt = ".data-api";
    const Pt = g.fn[At];
    const Lt = new RegExp("38|40|27");
    const jt = {
      HIDE: `hide${  Ot}`,
      HIDDEN: `hidden${  Ot}`,
      SHOW: `show${  Ot}`,
      SHOWN: `shown${  Ot}`,
      CLICK: `click${  Ot}`,
      CLICK_DATA_API: `click${  Ot  }${kt}`,
      KEYDOWN_DATA_API: `keydown${  Ot  }${kt}`,
      KEYUP_DATA_API: `keyup${  Ot  }${kt}`,
    };
    const Ht = "disabled";
    const Rt = "show";
    const xt = "dropup";
    const Ft = "dropright";
    const Ut = "dropleft";
    const Wt = "dropdown-menu-right";
    const qt = "position-static";
    const Mt = '[data-toggle="dropdown"]';
    const Kt = ".dropdown form";
    const Qt = ".dropdown-menu";
    const Bt = ".navbar-nav";
    const Vt = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)";
    const Yt = "top-start";
    const zt = "top-end";
    const Xt = "bottom-start";
    const $t = "bottom-end";
    const Gt = "right-start";
    const Jt = "left-start";
    const Zt = {
      offset: 0,
      flip: !0,
      boundary: "scrollParent",
      reference: "toggle",
      display: "dynamic",
      popperConfig: null,
    };
    const te = {
      offset: "(number|string|function)",
      flip: "boolean",
      boundary: "(string|element)",
      reference: "(string|element)",
      display: "string",
      popperConfig: "(null|object)",
    };
    const ee = (function () {
      function c(t, e) {
        (this._element = t),
          (this._popper = null),
          (this._config = this._getConfig(e)),
          (this._menu = this._getMenuElement()),
          (this._inNavbar = this._detectNavbar()),
          this._addEventListeners();
      }
      const t = c.prototype;
      return (
        (t.toggle = function () {
          if (!this._element.disabled && !g(this._element).hasClass(Ht)) {
            const t = g(this._menu).hasClass(Rt);
            c._clearMenus(), t || this.show(!0);
          }
        }),
        (t.show = function (t) {
          if (
            (void 0 === t && (t = !1),
            !(
              this._element.disabled ||
              g(this._element).hasClass(Ht) ||
              g(this._menu).hasClass(Rt)
            ))
          ) {
            const e = { relatedTarget: this._element };
              const n = g.Event(jt.SHOW, e);
              const i = c._getParentFromElement(this._element);
            if ((g(i).trigger(n), !n.isDefaultPrevented())) {
              if (!this._inNavbar && t) {
                if (typeof u === "undefined")
                  throw new TypeError(
                    "Bootstrap's dropdowns require Popper.js (https://popper.js.org/)"
                  );
                let o = this._element;
                this._config.reference === "parent"
                  ? (o = i)
                  : _.isElement(this._config.reference) &&
                    ((o = this._config.reference),
                    typeof this._config.reference.jquery !== "undefined" &&
                      (o = this._config.reference[0])),
                  this._config.boundary !== "scrollParent" && g(i).addClass(qt),
                  (this._popper = new u(
                    o,
                    this._menu,
                    this._getPopperConfig()
                  ));
              }
              "ontouchstart" in document.documentElement &&
                g(i).closest(Bt).length === 0 &&
                g(document.body).children().on("mouseover", null, g.noop),
                this._element.focus(),
                this._element.setAttribute("aria-expanded", !0),
                g(this._menu).toggleClass(Rt),
                g(i).toggleClass(Rt).trigger(g.Event(jt.SHOWN, e));
            }
          }
        }),
        (t.hide = function () {
          if (
            !this._element.disabled &&
            !g(this._element).hasClass(Ht) &&
            g(this._menu).hasClass(Rt)
          ) {
            const t = { relatedTarget: this._element };
              const e = g.Event(jt.HIDE, t);
              const n = c._getParentFromElement(this._element);
            g(n).trigger(e),
              e.isDefaultPrevented() ||
                (this._popper && this._popper.destroy(),
                g(this._menu).toggleClass(Rt),
                g(n).toggleClass(Rt).trigger(g.Event(jt.HIDDEN, t)));
          }
        }),
        (t.dispose = function () {
          g.removeData(this._element, Nt),
            g(this._element).off(Ot),
            (this._element = null),
            (this._menu = null) !== this._popper &&
              (this._popper.destroy(), (this._popper = null));
        }),
        (t.update = function () {
          (this._inNavbar = this._detectNavbar()),
            this._popper !== null && this._popper.scheduleUpdate();
        }),
        (t._addEventListeners = function () {
          const e = this;
          g(this._element).on(jt.CLICK, function (t) {
            t.preventDefault(), t.stopPropagation(), e.toggle();
          });
        }),
        (t._getConfig = function (t) {
          return (
            (t = l(
              {},
              this.constructor.Default,
              {},
              g(this._element).data(),
              {},
              t
            )),
            _.typeCheckConfig(At, t, this.constructor.DefaultType),
            t
          );
        }),
        (t._getMenuElement = function () {
          if (!this._menu) {
            const t = c._getParentFromElement(this._element);
            t && (this._menu = t.querySelector(Qt));
          }
          return this._menu;
        }),
        (t._getPlacement = function () {
          const t = g(this._element.parentNode);
            let e = Xt;
          return (
            t.hasClass(xt)
              ? ((e = Yt), g(this._menu).hasClass(Wt) && (e = zt))
              : t.hasClass(Ft)
              ? (e = Gt)
              : t.hasClass(Ut)
              ? (e = Jt)
              : g(this._menu).hasClass(Wt) && (e = $t),
            e
          );
        }),
        (t._detectNavbar = function () {
          return g(this._element).closest(".navbar").length > 0;
        }),
        (t._getOffset = function () {
          const e = this;
            const t = {};
          return (
            typeof this._config.offset === "function"
              ? (t.fn = function (t) {
                  return (
                    (t.offsets = l(
                      {},
                      t.offsets,
                      {},
                      e._config.offset(t.offsets, e._element) || {}
                    )),
                    t
                  );
                })
              : (t.offset = this._config.offset),
            t
          );
        }),
        (t._getPopperConfig = function () {
          const t = {
            placement: this._getPlacement(),
            modifiers: {
              offset: this._getOffset(),
              flip: { enabled: this._config.flip },
              preventOverflow: { boundariesElement: this._config.boundary },
            },
          };
          return (
            this._config.display === "static" &&
              (t.modifiers.applyStyle = { enabled: !1 }),
            l({}, t, {}, this._config.popperConfig)
          );
        }),
        (c._jQueryInterface = function (e) {
          return this.each(function () {
            let t = g(this).data(Nt);
            if (
              (t ||
                ((t = new c(this, typeof e === "object" ? e : null)),
                g(this).data(Nt, t)),
              typeof e === "string")
            ) {
              if (typeof t[e] === "undefined")
                throw new TypeError(`No method named "${  e  }"`);
              t[e]();
            }
          });
        }),
        (c._clearMenus = function (t) {
          if (!t || (t.which !== 3 && (t.type !== "keyup" || t.which === 9)))
            for (
              let e = [].slice.call(document.querySelectorAll(Mt)),
                n = 0,
                i = e.length;
              n < i;
              n++
            ) {
              const o = c._getParentFromElement(e[n]);
                const r = g(e[n]).data(Nt);
                const s = { relatedTarget: e[n] };
              if ((t && t.type === "click" && (s.clickEvent = t), r)) {
                const a = r._menu;
                if (
                  g(o).hasClass(Rt) &&
                  !(
                    t &&
                    ((t.type === "click" &&
                      /input|textarea/i.test(t.target.tagName)) ||
                      (t.type === "keyup" && t.which === 9)) &&
                    g.contains(o, t.target)
                  )
                ) {
                  const l = g.Event(jt.HIDE, s);
                  g(o).trigger(l),
                    l.isDefaultPrevented() ||
                      ("ontouchstart" in document.documentElement &&
                        g(document.body)
                          .children()
                          .off("mouseover", null, g.noop),
                      e[n].setAttribute("aria-expanded", "false"),
                      r._popper && r._popper.destroy(),
                      g(a).removeClass(Rt),
                      g(o).removeClass(Rt).trigger(g.Event(jt.HIDDEN, s)));
                }
              }
            }
        }),
        (c._getParentFromElement = function (t) {
          let e;
            const n = _.getSelectorFromElement(t);
          return n && (e = document.querySelector(n)), e || t.parentNode;
        }),
        (c._dataApiKeydownHandler = function (t) {
          if (
            (/input|textarea/i.test(t.target.tagName)
              ? !(
                  t.which === 32 ||
                  (t.which !== 27 &&
                    ((t.which !== 40 && t.which !== 38) ||
                      g(t.target).closest(Qt).length))
                )
              : Lt.test(t.which)) &&
            (t.preventDefault(),
            t.stopPropagation(),
            !this.disabled && !g(this).hasClass(Ht))
          ) {
            const e = c._getParentFromElement(this);
              const n = g(e).hasClass(Rt);
            if (n || t.which !== 27)
              if (n && (!n || (t.which !== 27 && t.which !== 32))) {
                const i = [].slice
                  .call(e.querySelectorAll(Vt))
                  .filter(function (t) {
                    return g(t).is(":visible");
                  });
                if (i.length !== 0) {
                  let o = i.indexOf(t.target);
                  t.which === 38 && o > 0 && o--,
                    t.which === 40 && o < i.length - 1 && o++,
                    o < 0 && (o = 0),
                    i[o].focus();
                }
              } else {
                if (t.which === 27) {
                  const r = e.querySelector(Mt);
                  g(r).trigger("focus");
                }
                g(this).trigger("click");
              }
          }
        }),
        s(c, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return Zt;
            },
          },
          {
            key: "DefaultType",
            get () {
              return te;
            },
          },
        ]),
        c
      );
    })();
  g(document)
    .on(jt.KEYDOWN_DATA_API, Mt, ee._dataApiKeydownHandler)
    .on(jt.KEYDOWN_DATA_API, Qt, ee._dataApiKeydownHandler)
    .on(`${jt.CLICK_DATA_API  } ${  jt.KEYUP_DATA_API}`, ee._clearMenus)
    .on(jt.CLICK_DATA_API, Mt, function (t) {
      t.preventDefault(),
        t.stopPropagation(),
        ee._jQueryInterface.call(g(this), "toggle");
    })
    .on(jt.CLICK_DATA_API, Kt, function (t) {
      t.stopPropagation();
    }),
    (g.fn[At] = ee._jQueryInterface),
    (g.fn[At].Constructor = ee),
    (g.fn[At].noConflict = function () {
      return (g.fn[At] = Pt), ee._jQueryInterface;
    });
  const ne = "modal";
    const ie = "bs.modal";
    const oe = `.${  ie}`;
    const re = g.fn[ne];
    const se = { backdrop: !0, keyboard: !0, focus: !0, show: !0 };
    const ae = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      focus: "boolean",
      show: "boolean",
    };
    const le = {
      HIDE: `hide${  oe}`,
      HIDE_PREVENTED: `hidePrevented${  oe}`,
      HIDDEN: `hidden${  oe}`,
      SHOW: `show${  oe}`,
      SHOWN: `shown${  oe}`,
      FOCUSIN: `focusin${  oe}`,
      RESIZE: `resize${  oe}`,
      CLICK_DISMISS: `click.dismiss${  oe}`,
      KEYDOWN_DISMISS: `keydown.dismiss${  oe}`,
      MOUSEUP_DISMISS: `mouseup.dismiss${  oe}`,
      MOUSEDOWN_DISMISS: `mousedown.dismiss${  oe}`,
      CLICK_DATA_API: `click${  oe  }.data-api`,
    };
    const ce = "modal-dialog-scrollable";
    const he = "modal-scrollbar-measure";
    const ue = "modal-backdrop";
    const fe = "modal-open";
    const de = "fade";
    const ge = "show";
    const _e = "modal-static";
    const me = ".modal-dialog";
    const pe = ".modal-body";
    const ve = '[data-toggle="modal"]';
    const ye = '[data-dismiss="modal"]';
    const Ee = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top";
    const Ce = ".sticky-top";
    const Te = (function () {
      function o(t, e) {
        (this._config = this._getConfig(e)),
          (this._element = t),
          (this._dialog = t.querySelector(me)),
          (this._backdrop = null),
          (this._isShown = !1),
          (this._isBodyOverflowing = !1),
          (this._ignoreBackdropClick = !1),
          (this._isTransitioning = !1),
          (this._scrollbarWidth = 0);
      }
      const t = o.prototype;
      return (
        (t.toggle = function (t) {
          return this._isShown ? this.hide() : this.show(t);
        }),
        (t.show = function (t) {
          const e = this;
          if (!this._isShown && !this._isTransitioning) {
            g(this._element).hasClass(de) && (this._isTransitioning = !0);
            const n = g.Event(le.SHOW, { relatedTarget: t });
            g(this._element).trigger(n),
              this._isShown ||
                n.isDefaultPrevented() ||
                ((this._isShown = !0),
                this._checkScrollbar(),
                this._setScrollbar(),
                this._adjustDialog(),
                this._setEscapeEvent(),
                this._setResizeEvent(),
                g(this._element).on(le.CLICK_DISMISS, ye, function (t) {
                  return e.hide(t);
                }),
                g(this._dialog).on(le.MOUSEDOWN_DISMISS, function () {
                  g(e._element).one(le.MOUSEUP_DISMISS, function (t) {
                    g(t.target).is(e._element) && (e._ignoreBackdropClick = !0);
                  });
                }),
                this._showBackdrop(function () {
                  return e._showElement(t);
                }));
          }
        }),
        (t.hide = function (t) {
          const e = this;
          if (
            (t && t.preventDefault(), this._isShown && !this._isTransitioning)
          ) {
            const n = g.Event(le.HIDE);
            if (
              (g(this._element).trigger(n),
              this._isShown && !n.isDefaultPrevented())
            ) {
              this._isShown = !1;
              const i = g(this._element).hasClass(de);
              if (
                (i && (this._isTransitioning = !0),
                this._setEscapeEvent(),
                this._setResizeEvent(),
                g(document).off(le.FOCUSIN),
                g(this._element).removeClass(ge),
                g(this._element).off(le.CLICK_DISMISS),
                g(this._dialog).off(le.MOUSEDOWN_DISMISS),
                i)
              ) {
                const o = _.getTransitionDurationFromElement(this._element);
                g(this._element)
                  .one(_.TRANSITION_END, function (t) {
                    return e._hideModal(t);
                  })
                  .emulateTransitionEnd(o);
              } else this._hideModal();
            }
          }
        }),
        (t.dispose = function () {
          [window, this._element, this._dialog].forEach(function (t) {
            return g(t).off(oe);
          }),
            g(document).off(le.FOCUSIN),
            g.removeData(this._element, ie),
            (this._config = null),
            (this._element = null),
            (this._dialog = null),
            (this._backdrop = null),
            (this._isShown = null),
            (this._isBodyOverflowing = null),
            (this._ignoreBackdropClick = null),
            (this._isTransitioning = null),
            (this._scrollbarWidth = null);
        }),
        (t.handleUpdate = function () {
          this._adjustDialog();
        }),
        (t._getConfig = function (t) {
          return (t = l({}, se, {}, t)), _.typeCheckConfig(ne, t, ae), t;
        }),
        (t._triggerBackdropTransition = function () {
          const t = this;
          if (this._config.backdrop === "static") {
            const e = g.Event(le.HIDE_PREVENTED);
            if ((g(this._element).trigger(e), e.defaultPrevented)) return;
            this._element.classList.add(_e);
            const n = _.getTransitionDurationFromElement(this._element);
            g(this._element)
              .one(_.TRANSITION_END, function () {
                t._element.classList.remove(_e);
              })
              .emulateTransitionEnd(n),
              this._element.focus();
          } else this.hide();
        }),
        (t._showElement = function (t) {
          const e = this;
            const n = g(this._element).hasClass(de);
            const i = this._dialog ? this._dialog.querySelector(pe) : null;
          (this._element.parentNode &&
            this._element.parentNode.nodeType === Node.ELEMENT_NODE) ||
            document.body.appendChild(this._element),
            (this._element.style.display = "block"),
            this._element.removeAttribute("aria-hidden"),
            this._element.setAttribute("aria-modal", !0),
            g(this._dialog).hasClass(ce) && i
              ? (i.scrollTop = 0)
              : (this._element.scrollTop = 0),
            n && _.reflow(this._element),
            g(this._element).addClass(ge),
            this._config.focus && this._enforceFocus();
          function o() {
            e._config.focus && e._element.focus(),
              (e._isTransitioning = !1),
              g(e._element).trigger(r);
          }
          var r = g.Event(le.SHOWN, { relatedTarget: t });
          if (n) {
            const s = _.getTransitionDurationFromElement(this._dialog);
            g(this._dialog).one(_.TRANSITION_END, o).emulateTransitionEnd(s);
          } else o();
        }),
        (t._enforceFocus = function () {
          const e = this;
          g(document)
            .off(le.FOCUSIN)
            .on(le.FOCUSIN, function (t) {
              document !== t.target &&
                e._element !== t.target &&
                g(e._element).has(t.target).length === 0 &&
                e._element.focus();
            });
        }),
        (t._setEscapeEvent = function () {
          const e = this;
          this._isShown && this._config.keyboard
            ? g(this._element).on(le.KEYDOWN_DISMISS, function (t) {
                t.which === 27 && e._triggerBackdropTransition();
              })
            : this._isShown || g(this._element).off(le.KEYDOWN_DISMISS);
        }),
        (t._setResizeEvent = function () {
          const e = this;
          this._isShown
            ? g(window).on(le.RESIZE, function (t) {
                return e.handleUpdate(t);
              })
            : g(window).off(le.RESIZE);
        }),
        (t._hideModal = function () {
          const t = this;
          (this._element.style.display = "none"),
            this._element.setAttribute("aria-hidden", !0),
            this._element.removeAttribute("aria-modal"),
            (this._isTransitioning = !1),
            this._showBackdrop(function () {
              g(document.body).removeClass(fe),
                t._resetAdjustments(),
                t._resetScrollbar(),
                g(t._element).trigger(le.HIDDEN);
            });
        }),
        (t._removeBackdrop = function () {
          this._backdrop &&
            (g(this._backdrop).remove(), (this._backdrop = null));
        }),
        (t._showBackdrop = function (t) {
          const e = this;
            const n = g(this._element).hasClass(de) ? de : "";
          if (this._isShown && this._config.backdrop) {
            if (
              ((this._backdrop = document.createElement("div")),
              (this._backdrop.className = ue),
              n && this._backdrop.classList.add(n),
              g(this._backdrop).appendTo(document.body),
              g(this._element).on(le.CLICK_DISMISS, function (t) {
                e._ignoreBackdropClick
                  ? (e._ignoreBackdropClick = !1)
                  : t.target === t.currentTarget &&
                    e._triggerBackdropTransition();
              }),
              n && _.reflow(this._backdrop),
              g(this._backdrop).addClass(ge),
              !t)
            )
              return;
            if (!n) return void t();
            const i = _.getTransitionDurationFromElement(this._backdrop);
            g(this._backdrop).one(_.TRANSITION_END, t).emulateTransitionEnd(i);
          } else if (!this._isShown && this._backdrop) {
            g(this._backdrop).removeClass(ge);
            const o = function () {
              e._removeBackdrop(), t && t();
            };
            if (g(this._element).hasClass(de)) {
              const r = _.getTransitionDurationFromElement(this._backdrop);
              g(this._backdrop)
                .one(_.TRANSITION_END, o)
                .emulateTransitionEnd(r);
            } else o();
          } else t && t();
        }),
        (t._adjustDialog = function () {
          const t =
            this._element.scrollHeight > document.documentElement.clientHeight;
          !this._isBodyOverflowing &&
            t &&
            (this._element.style.paddingLeft = `${this._scrollbarWidth  }px`),
            this._isBodyOverflowing &&
              !t &&
              (this._element.style.paddingRight = `${this._scrollbarWidth  }px`);
        }),
        (t._resetAdjustments = function () {
          (this._element.style.paddingLeft = ""),
            (this._element.style.paddingRight = "");
        }),
        (t._checkScrollbar = function () {
          const t = document.body.getBoundingClientRect();
          (this._isBodyOverflowing = t.left + t.right < window.innerWidth),
            (this._scrollbarWidth = this._getScrollbarWidth());
        }),
        (t._setScrollbar = function () {
          const o = this;
          if (this._isBodyOverflowing) {
            const t = [].slice.call(document.querySelectorAll(Ee));
              const e = [].slice.call(document.querySelectorAll(Ce));
            g(t).each(function (t, e) {
              const n = e.style.paddingRight;
                const i = g(e).css("padding-right");
              g(e)
                .data("padding-right", n)
                .css("padding-right", `${parseFloat(i) + o._scrollbarWidth  }px`);
            }),
              g(e).each(function (t, e) {
                const n = e.style.marginRight;
                  const i = g(e).css("margin-right");
                g(e)
                  .data("margin-right", n)
                  .css(
                    "margin-right",
                    `${parseFloat(i) - o._scrollbarWidth  }px`
                  );
              });
            const n = document.body.style.paddingRight;
              const i = g(document.body).css("padding-right");
            g(document.body)
              .data("padding-right", n)
              .css(
                "padding-right",
                `${parseFloat(i) + this._scrollbarWidth  }px`
              );
          }
          g(document.body).addClass(fe);
        }),
        (t._resetScrollbar = function () {
          const t = [].slice.call(document.querySelectorAll(Ee));
          g(t).each(function (t, e) {
            const n = g(e).data("padding-right");
            g(e).removeData("padding-right"), (e.style.paddingRight = n || "");
          });
          const e = [].slice.call(document.querySelectorAll(`${  Ce}`));
          g(e).each(function (t, e) {
            const n = g(e).data("margin-right");
            typeof n !== "undefined" &&
              g(e).css("margin-right", n).removeData("margin-right");
          });
          const n = g(document.body).data("padding-right");
          g(document.body).removeData("padding-right"),
            (document.body.style.paddingRight = n || "");
        }),
        (t._getScrollbarWidth = function () {
          const t = document.createElement("div");
          (t.className = he), document.body.appendChild(t);
          const e = t.getBoundingClientRect().width - t.clientWidth;
          return document.body.removeChild(t), e;
        }),
        (o._jQueryInterface = function (n, i) {
          return this.each(function () {
            let t = g(this).data(ie);
              const e = l(
                {},
                se,
                {},
                g(this).data(),
                {},
                typeof n === "object" && n ? n : {}
              );
            if (
              (t || ((t = new o(this, e)), g(this).data(ie, t)),
              typeof n === "string")
            ) {
              if (typeof t[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              t[n](i);
            } else e.show && t.show(i);
          });
        }),
        s(o, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return se;
            },
          },
        ]),
        o
      );
    })();
  g(document).on(le.CLICK_DATA_API, ve, function (t) {
    let e;
      const n = this;
      const i = _.getSelectorFromElement(this);
    i && (e = document.querySelector(i));
    const o = g(e).data(ie) ? "toggle" : l({}, g(e).data(), {}, g(this).data());
    (this.tagName !== "A" && this.tagName !== "AREA") || t.preventDefault();
    var r = g(e).one(le.SHOW, function (t) {
      t.isDefaultPrevented() ||
        r.one(le.HIDDEN, function () {
          g(n).is(":visible") && n.focus();
        });
    });
    Te._jQueryInterface.call(g(e), o, this);
  }),
    (g.fn[ne] = Te._jQueryInterface),
    (g.fn[ne].Constructor = Te),
    (g.fn[ne].noConflict = function () {
      return (g.fn[ne] = re), Te._jQueryInterface;
    });
  const be = [
      "background",
      "cite",
      "href",
      "itemtype",
      "longdesc",
      "poster",
      "src",
      "xlink:href",
    ];
    const Se = {
      "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i],
      a: ["target", "href", "title", "rel"],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      div: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ["src", "alt", "title", "width", "height"],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: [],
    };
    const De = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;
    const Ie =
      /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;
  function we(t, r, e) {
    if (t.length === 0) return t;
    if (e && typeof e === "function") return e(t);
    for (
      var n = new window.DOMParser().parseFromString(t, "text/html"),
        s = Object.keys(r),
        a = [].slice.call(n.body.querySelectorAll("*")),
        i = function (t) {
          const e = a[t];
            const n = e.nodeName.toLowerCase();
          if (s.indexOf(e.nodeName.toLowerCase()) === -1)
            return e.parentNode.removeChild(e), "continue";
          const i = [].slice.call(e.attributes);
            const o = [].concat(r["*"] || [], r[n] || []);
          i.forEach(function (t) {
            !(function (t, e) {
              const n = t.nodeName.toLowerCase();
              if (e.indexOf(n) !== -1)
                return (
                  be.indexOf(n) === -1 ||
                  Boolean(t.nodeValue.match(De) || t.nodeValue.match(Ie))
                );
              for (
                let i = e.filter(function (t) {
                    return t instanceof RegExp;
                  }),
                  o = 0,
                  r = i.length;
                o < r;
                o++
              )
                if (n.match(i[o])) return !0;
              return !1;
            })(t, o) && e.removeAttribute(t.nodeName);
          });
        },
        o = 0,
        l = a.length;
      o < l;
      o++
    )
      i(o);
    return n.body.innerHTML;
  }
  const Ae = "tooltip";
    const Ne = "bs.tooltip";
    const Oe = `.${  Ne}`;
    const ke = g.fn[Ae];
    const Pe = "bs-tooltip";
    const Le = new RegExp(`(^|\\s)${  Pe  }\\S+`, "g");
    const je = ["sanitize", "whiteList", "sanitizeFn"];
    const He = {
      animation: "boolean",
      template: "string",
      title: "(string|element|function)",
      trigger: "string",
      delay: "(number|object)",
      html: "boolean",
      selector: "(string|boolean)",
      placement: "(string|function)",
      offset: "(number|string|function)",
      container: "(string|element|boolean)",
      fallbackPlacement: "(string|array)",
      boundary: "(string|element)",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      whiteList: "object",
      popperConfig: "(null|object)",
    };
    const Re = {
      AUTO: "auto",
      TOP: "top",
      RIGHT: "right",
      BOTTOM: "bottom",
      LEFT: "left",
    };
    const xe = {
      animation: !0,
      template:
        '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
      trigger: "hover focus",
      title: "",
      delay: 0,
      html: !1,
      selector: !1,
      placement: "top",
      offset: 0,
      container: !1,
      fallbackPlacement: "flip",
      boundary: "scrollParent",
      sanitize: !0,
      sanitizeFn: null,
      whiteList: Se,
      popperConfig: null,
    };
    const Fe = "show";
    const Ue = "out";
    const We = {
      HIDE: `hide${  Oe}`,
      HIDDEN: `hidden${  Oe}`,
      SHOW: `show${  Oe}`,
      SHOWN: `shown${  Oe}`,
      INSERTED: `inserted${  Oe}`,
      CLICK: `click${  Oe}`,
      FOCUSIN: `focusin${  Oe}`,
      FOCUSOUT: `focusout${  Oe}`,
      MOUSEENTER: `mouseenter${  Oe}`,
      MOUSELEAVE: `mouseleave${  Oe}`,
    };
    const qe = "fade";
    const Me = "show";
    const Ke = ".tooltip-inner";
    const Qe = ".arrow";
    const Be = "hover";
    const Ve = "focus";
    const Ye = "click";
    const ze = "manual";
    const Xe = (function () {
      function i(t, e) {
        if (typeof u === "undefined")
          throw new TypeError(
            "Bootstrap's tooltips require Popper.js (https://popper.js.org/)"
          );
        (this._isEnabled = !0),
          (this._timeout = 0),
          (this._hoverState = ""),
          (this._activeTrigger = {}),
          (this._popper = null),
          (this.element = t),
          (this.config = this._getConfig(e)),
          (this.tip = null),
          this._setListeners();
      }
      const t = i.prototype;
      return (
        (t.enable = function () {
          this._isEnabled = !0;
        }),
        (t.disable = function () {
          this._isEnabled = !1;
        }),
        (t.toggleEnabled = function () {
          this._isEnabled = !this._isEnabled;
        }),
        (t.toggle = function (t) {
          if (this._isEnabled)
            if (t) {
              const e = this.constructor.DATA_KEY;
                let n = g(t.currentTarget).data(e);
              n ||
                ((n = new this.constructor(
                  t.currentTarget,
                  this._getDelegateConfig()
                )),
                g(t.currentTarget).data(e, n)),
                (n._activeTrigger.click = !n._activeTrigger.click),
                n._isWithActiveTrigger()
                  ? n._enter(null, n)
                  : n._leave(null, n);
            } else {
              if (g(this.getTipElement()).hasClass(Me))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }),
        (t.dispose = function () {
          clearTimeout(this._timeout),
            g.removeData(this.element, this.constructor.DATA_KEY),
            g(this.element).off(this.constructor.EVENT_KEY),
            g(this.element)
              .closest(".modal")
              .off("hide.bs.modal", this._hideModalHandler),
            this.tip && g(this.tip).remove(),
            (this._isEnabled = null),
            (this._timeout = null),
            (this._hoverState = null),
            (this._activeTrigger = null),
            this._popper && this._popper.destroy(),
            (this._popper = null),
            (this.element = null),
            (this.config = null),
            (this.tip = null);
        }),
        (t.show = function () {
          const e = this;
          if (g(this.element).css("display") === "none")
            throw new Error("Please use show on visible elements");
          const t = g.Event(this.constructor.Event.SHOW);
          if (this.isWithContent() && this._isEnabled) {
            g(this.element).trigger(t);
            const n = _.findShadowRoot(this.element);
              const i = g.contains(
                n !== null ? n : this.element.ownerDocument.documentElement,
                this.element
              );
            if (t.isDefaultPrevented() || !i) return;
            const o = this.getTipElement();
              const r = _.getUID(this.constructor.NAME);
            o.setAttribute("id", r),
              this.element.setAttribute("aria-describedby", r),
              this.setContent(),
              this.config.animation && g(o).addClass(qe);
            const s =
                typeof this.config.placement === "function"
                  ? this.config.placement.call(this, o, this.element)
                  : this.config.placement;
              const a = this._getAttachment(s);
            this.addAttachmentClass(a);
            const l = this._getContainer();
            g(o).data(this.constructor.DATA_KEY, this),
              g.contains(
                this.element.ownerDocument.documentElement,
                this.tip
              ) || g(o).appendTo(l),
              g(this.element).trigger(this.constructor.Event.INSERTED),
              (this._popper = new u(this.element, o, this._getPopperConfig(a))),
              g(o).addClass(Me),
              "ontouchstart" in document.documentElement &&
                g(document.body).children().on("mouseover", null, g.noop);
            const c = function () {
              e.config.animation && e._fixTransition();
              const t = e._hoverState;
              (e._hoverState = null),
                g(e.element).trigger(e.constructor.Event.SHOWN),
                t === Ue && e._leave(null, e);
            };
            if (g(this.tip).hasClass(qe)) {
              const h = _.getTransitionDurationFromElement(this.tip);
              g(this.tip).one(_.TRANSITION_END, c).emulateTransitionEnd(h);
            } else c();
          }
        }),
        (t.hide = function (t) {
          function e() {
            n._hoverState !== Fe && i.parentNode && i.parentNode.removeChild(i),
              n._cleanTipClass(),
              n.element.removeAttribute("aria-describedby"),
              g(n.element).trigger(n.constructor.Event.HIDDEN),
              n._popper !== null && n._popper.destroy(),
              t && t();
          }
          var n = this;
            var i = this.getTipElement();
            const o = g.Event(this.constructor.Event.HIDE);
          if ((g(this.element).trigger(o), !o.isDefaultPrevented())) {
            if (
              (g(i).removeClass(Me),
              "ontouchstart" in document.documentElement &&
                g(document.body).children().off("mouseover", null, g.noop),
              (this._activeTrigger[Ye] = !1),
              (this._activeTrigger[Ve] = !1),
              (this._activeTrigger[Be] = !1),
              g(this.tip).hasClass(qe))
            ) {
              const r = _.getTransitionDurationFromElement(i);
              g(i).one(_.TRANSITION_END, e).emulateTransitionEnd(r);
            } else e();
            this._hoverState = "";
          }
        }),
        (t.update = function () {
          this._popper !== null && this._popper.scheduleUpdate();
        }),
        (t.isWithContent = function () {
          return Boolean(this.getTitle());
        }),
        (t.addAttachmentClass = function (t) {
          g(this.getTipElement()).addClass(`${Pe  }-${  t}`);
        }),
        (t.getTipElement = function () {
          return (this.tip = this.tip || g(this.config.template)[0]), this.tip;
        }),
        (t.setContent = function () {
          const t = this.getTipElement();
          this.setElementContent(g(t.querySelectorAll(Ke)), this.getTitle()),
            g(t).removeClass(`${qe  } ${  Me}`);
        }),
        (t.setElementContent = function (t, e) {
          typeof e !== "object" || (!e.nodeType && !e.jquery)
            ? this.config.html
              ? (this.config.sanitize &&
                  (e = we(e, this.config.whiteList, this.config.sanitizeFn)),
                t.html(e))
              : t.text(e)
            : this.config.html
            ? g(e).parent().is(t) || t.empty().append(e)
            : t.text(g(e).text());
        }),
        (t.getTitle = function () {
          let t = this.element.getAttribute("data-original-title");
          return (t =
            t ||
            (typeof this.config.title === "function"
              ? this.config.title.call(this.element)
              : this.config.title));
        }),
        (t._getPopperConfig = function (t) {
          const e = this;
          return l(
            {},
            {
              placement: t,
              modifiers: {
                offset: this._getOffset(),
                flip: { behavior: this.config.fallbackPlacement },
                arrow: { element: Qe },
                preventOverflow: { boundariesElement: this.config.boundary },
              },
              onCreate (t) {
                t.originalPlacement !== t.placement &&
                  e._handlePopperPlacementChange(t);
              },
              onUpdate (t) {
                return e._handlePopperPlacementChange(t);
              },
            },
            {},
            this.config.popperConfig
          );
        }),
        (t._getOffset = function () {
          const e = this;
            const t = {};
          return (
            typeof this.config.offset === "function"
              ? (t.fn = function (t) {
                  return (
                    (t.offsets = l(
                      {},
                      t.offsets,
                      {},
                      e.config.offset(t.offsets, e.element) || {}
                    )),
                    t
                  );
                })
              : (t.offset = this.config.offset),
            t
          );
        }),
        (t._getContainer = function () {
          return !1 === this.config.container
            ? document.body
            : _.isElement(this.config.container)
            ? g(this.config.container)
            : g(document).find(this.config.container);
        }),
        (t._getAttachment = function (t) {
          return Re[t.toUpperCase()];
        }),
        (t._setListeners = function () {
          const i = this;
          this.config.trigger.split(" ").forEach(function (t) {
            if (t === "click")
              g(i.element).on(
                i.constructor.Event.CLICK,
                i.config.selector,
                function (t) {
                  return i.toggle(t);
                }
              );
            else if (t !== ze) {
              const e =
                  t === Be
                    ? i.constructor.Event.MOUSEENTER
                    : i.constructor.Event.FOCUSIN;
                const n =
                  t === Be
                    ? i.constructor.Event.MOUSELEAVE
                    : i.constructor.Event.FOCUSOUT;
              g(i.element)
                .on(e, i.config.selector, function (t) {
                  return i._enter(t);
                })
                .on(n, i.config.selector, function (t) {
                  return i._leave(t);
                });
            }
          }),
            (this._hideModalHandler = function () {
              i.element && i.hide();
            }),
            g(this.element)
              .closest(".modal")
              .on("hide.bs.modal", this._hideModalHandler),
            this.config.selector
              ? (this.config = l({}, this.config, {
                  trigger: "manual",
                  selector: "",
                }))
              : this._fixTitle();
        }),
        (t._fixTitle = function () {
          const t = typeof this.element.getAttribute("data-original-title");
          (!this.element.getAttribute("title") && t == "string") ||
            (this.element.setAttribute(
              "data-original-title",
              this.element.getAttribute("title") || ""
            ),
            this.element.setAttribute("title", ""));
        }),
        (t._enter = function (t, e) {
          const n = this.constructor.DATA_KEY;
          (e = e || g(t.currentTarget).data(n)) ||
            ((e = new this.constructor(
              t.currentTarget,
              this._getDelegateConfig()
            )),
            g(t.currentTarget).data(n, e)),
            t && (e._activeTrigger[t.type === "focusin" ? Ve : Be] = !0),
            g(e.getTipElement()).hasClass(Me) || e._hoverState === Fe
              ? (e._hoverState = Fe)
              : (clearTimeout(e._timeout),
                (e._hoverState = Fe),
                e.config.delay && e.config.delay.show
                  ? (e._timeout = setTimeout(function () {
                      e._hoverState === Fe && e.show();
                    }, e.config.delay.show))
                  : e.show());
        }),
        (t._leave = function (t, e) {
          const n = this.constructor.DATA_KEY;
          (e = e || g(t.currentTarget).data(n)) ||
            ((e = new this.constructor(
              t.currentTarget,
              this._getDelegateConfig()
            )),
            g(t.currentTarget).data(n, e)),
            t && (e._activeTrigger[t.type === "focusout" ? Ve : Be] = !1),
            e._isWithActiveTrigger() ||
              (clearTimeout(e._timeout),
              (e._hoverState = Ue),
              e.config.delay && e.config.delay.hide
                ? (e._timeout = setTimeout(function () {
                    e._hoverState === Ue && e.hide();
                  }, e.config.delay.hide))
                : e.hide());
        }),
        (t._isWithActiveTrigger = function () {
          for (const t in this._activeTrigger)
            if (this._activeTrigger[t]) return !0;
          return !1;
        }),
        (t._getConfig = function (t) {
          const e = g(this.element).data();
          return (
            Object.keys(e).forEach(function (t) {
              je.indexOf(t) !== -1 && delete e[t];
            }),
            typeof (t = l(
                {},
                this.constructor.Default,
                {},
                e,
                {},
                typeof t === "object" && t ? t : {}
              )).delay ===
              "number" && (t.delay = { show: t.delay, hide: t.delay }),
            typeof t.title === "number" && (t.title = t.title.toString()),
            typeof t.content === "number" && (t.content = t.content.toString()),
            _.typeCheckConfig(Ae, t, this.constructor.DefaultType),
            t.sanitize &&
              (t.template = we(t.template, t.whiteList, t.sanitizeFn)),
            t
          );
        }),
        (t._getDelegateConfig = function () {
          const t = {};
          if (this.config)
            for (const e in this.config)
              this.constructor.Default[e] !== this.config[e] &&
                (t[e] = this.config[e]);
          return t;
        }),
        (t._cleanTipClass = function () {
          const t = g(this.getTipElement());
            const e = t.attr("class").match(Le);
          e !== null && e.length && t.removeClass(e.join(""));
        }),
        (t._handlePopperPlacementChange = function (t) {
          const e = t.instance;
          (this.tip = e.popper),
            this._cleanTipClass(),
            this.addAttachmentClass(this._getAttachment(t.placement));
        }),
        (t._fixTransition = function () {
          const t = this.getTipElement();
            const e = this.config.animation;
          t.getAttribute("x-placement") === null &&
            (g(t).removeClass(qe),
            (this.config.animation = !1),
            this.hide(),
            this.show(),
            (this.config.animation = e));
        }),
        (i._jQueryInterface = function (n) {
          return this.each(function () {
            let t = g(this).data(Ne);
              const e = typeof n === "object" && n;
            if (
              (t || !/dispose|hide/.test(n)) &&
              (t || ((t = new i(this, e)), g(this).data(Ne, t)),
              typeof n === "string")
            ) {
              if (typeof t[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              t[n]();
            }
          });
        }),
        s(i, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return xe;
            },
          },
          {
            key: "NAME",
            get () {
              return Ae;
            },
          },
          {
            key: "DATA_KEY",
            get () {
              return Ne;
            },
          },
          {
            key: "Event",
            get () {
              return We;
            },
          },
          {
            key: "EVENT_KEY",
            get () {
              return Oe;
            },
          },
          {
            key: "DefaultType",
            get () {
              return He;
            },
          },
        ]),
        i
      );
    })();
  (g.fn[Ae] = Xe._jQueryInterface),
    (g.fn[Ae].Constructor = Xe),
    (g.fn[Ae].noConflict = function () {
      return (g.fn[Ae] = ke), Xe._jQueryInterface;
    });
  const $e = "popover";
    const Ge = "bs.popover";
    const Je = `.${  Ge}`;
    const Ze = g.fn[$e];
    const tn = "bs-popover";
    const en = new RegExp(`(^|\\s)${  tn  }\\S+`, "g");
    const nn = l({}, Xe.Default, {
      placement: "right",
      trigger: "click",
      content: "",
      template:
        '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
    });
    const on = l({}, Xe.DefaultType, { content: "(string|element|function)" });
    const rn = "fade";
    const sn = "show";
    const an = ".popover-header";
    const ln = ".popover-body";
    const cn = {
      HIDE: `hide${  Je}`,
      HIDDEN: `hidden${  Je}`,
      SHOW: `show${  Je}`,
      SHOWN: `shown${  Je}`,
      INSERTED: `inserted${  Je}`,
      CLICK: `click${  Je}`,
      FOCUSIN: `focusin${  Je}`,
      FOCUSOUT: `focusout${  Je}`,
      MOUSEENTER: `mouseenter${  Je}`,
      MOUSELEAVE: `mouseleave${  Je}`,
    };
    const hn = (function (t) {
      function i() {
        return t.apply(this, arguments) || this;
      }
      !(function (t, e) {
        (t.prototype = Object.create(e.prototype)),
          ((t.prototype.constructor = t).__proto__ = e);
      })(i, t);
      const e = i.prototype;
      return (
        (e.isWithContent = function () {
          return this.getTitle() || this._getContent();
        }),
        (e.addAttachmentClass = function (t) {
          g(this.getTipElement()).addClass(`${tn  }-${  t}`);
        }),
        (e.getTipElement = function () {
          return (this.tip = this.tip || g(this.config.template)[0]), this.tip;
        }),
        (e.setContent = function () {
          const t = g(this.getTipElement());
          this.setElementContent(t.find(an), this.getTitle());
          let e = this._getContent();
          typeof e === "function" && (e = e.call(this.element)),
            this.setElementContent(t.find(ln), e),
            t.removeClass(`${rn  } ${  sn}`);
        }),
        (e._getContent = function () {
          return (
            this.element.getAttribute("data-content") || this.config.content
          );
        }),
        (e._cleanTipClass = function () {
          const t = g(this.getTipElement());
            const e = t.attr("class").match(en);
          e !== null && e.length > 0 && t.removeClass(e.join(""));
        }),
        (i._jQueryInterface = function (n) {
          return this.each(function () {
            let t = g(this).data(Ge);
              const e = typeof n === "object" ? n : null;
            if (
              (t || !/dispose|hide/.test(n)) &&
              (t || ((t = new i(this, e)), g(this).data(Ge, t)),
              typeof n === "string")
            ) {
              if (typeof t[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              t[n]();
            }
          });
        }),
        s(i, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return nn;
            },
          },
          {
            key: "NAME",
            get () {
              return $e;
            },
          },
          {
            key: "DATA_KEY",
            get () {
              return Ge;
            },
          },
          {
            key: "Event",
            get () {
              return cn;
            },
          },
          {
            key: "EVENT_KEY",
            get () {
              return Je;
            },
          },
          {
            key: "DefaultType",
            get () {
              return on;
            },
          },
        ]),
        i
      );
    })(Xe);
  (g.fn[$e] = hn._jQueryInterface),
    (g.fn[$e].Constructor = hn),
    (g.fn[$e].noConflict = function () {
      return (g.fn[$e] = Ze), hn._jQueryInterface;
    });
  const un = "scrollspy";
    const fn = "bs.scrollspy";
    const dn = `.${  fn}`;
    const gn = g.fn[un];
    const _n = { offset: 10, method: "auto", target: "" };
    const mn = { offset: "number", method: "string", target: "(string|element)" };
    const pn = {
      ACTIVATE: `activate${  dn}`,
      SCROLL: `scroll${  dn}`,
      LOAD_DATA_API: `load${  dn  }.data-api`,
    };
    const vn = "dropdown-item";
    const yn = "active";
    const En = '[data-spy="scroll"]';
    const Cn = ".nav, .list-group";
    const Tn = ".nav-link";
    const bn = ".nav-item";
    const Sn = ".list-group-item";
    const Dn = ".dropdown";
    const In = ".dropdown-item";
    const wn = ".dropdown-toggle";
    const An = "offset";
    const Nn = "position";
    const On = (function () {
      function n(t, e) {
        const n = this;
        (this._element = t),
          (this._scrollElement = t.tagName === "BODY" ? window : t),
          (this._config = this._getConfig(e)),
          (this._selector =
            `${this._config.target 
            } ${ 
            Tn 
            },${ 
            this._config.target 
            } ${ 
            Sn 
            },${ 
            this._config.target 
            } ${ 
            In}`),
          (this._offsets = []),
          (this._targets = []),
          (this._activeTarget = null),
          (this._scrollHeight = 0),
          g(this._scrollElement).on(pn.SCROLL, function (t) {
            return n._process(t);
          }),
          this.refresh(),
          this._process();
      }
      const t = n.prototype;
      return (
        (t.refresh = function () {
          const e = this;
            const t = this._scrollElement === this._scrollElement.window ? An : Nn;
            const o = this._config.method === "auto" ? t : this._config.method;
            const r = o === Nn ? this._getScrollTop() : 0;
          (this._offsets = []),
            (this._targets = []),
            (this._scrollHeight = this._getScrollHeight()),
            [].slice
              .call(document.querySelectorAll(this._selector))
              .map(function (t) {
                let e;
                  const n = _.getSelectorFromElement(t);
                if ((n && (e = document.querySelector(n)), e)) {
                  const i = e.getBoundingClientRect();
                  if (i.width || i.height) return [g(e)[o]().top + r, n];
                }
                return null;
              })
              .filter(function (t) {
                return t;
              })
              .sort(function (t, e) {
                return t[0] - e[0];
              })
              .forEach(function (t) {
                e._offsets.push(t[0]), e._targets.push(t[1]);
              });
        }),
        (t.dispose = function () {
          g.removeData(this._element, fn),
            g(this._scrollElement).off(dn),
            (this._element = null),
            (this._scrollElement = null),
            (this._config = null),
            (this._selector = null),
            (this._offsets = null),
            (this._targets = null),
            (this._activeTarget = null),
            (this._scrollHeight = null);
        }),
        (t._getConfig = function (t) {
          if (
            typeof (t = l({}, _n, {}, typeof t === "object" && t ? t : {}))
              .target !==
            "string"
          ) {
            let e = g(t.target).attr("id");
            e || ((e = _.getUID(un)), g(t.target).attr("id", e)),
              (t.target = `#${  e}`);
          }
          return _.typeCheckConfig(un, t, mn), t;
        }),
        (t._getScrollTop = function () {
          return this._scrollElement === window
            ? this._scrollElement.pageYOffset
            : this._scrollElement.scrollTop;
        }),
        (t._getScrollHeight = function () {
          return (
            this._scrollElement.scrollHeight ||
            Math.max(
              document.body.scrollHeight,
              document.documentElement.scrollHeight
            )
          );
        }),
        (t._getOffsetHeight = function () {
          return this._scrollElement === window
            ? window.innerHeight
            : this._scrollElement.getBoundingClientRect().height;
        }),
        (t._process = function () {
          const t = this._getScrollTop() + this._config.offset;
            const e = this._getScrollHeight();
            const n = this._config.offset + e - this._getOffsetHeight();
          if ((this._scrollHeight !== e && this.refresh(), n <= t)) {
            const i = this._targets[this._targets.length - 1];
            this._activeTarget !== i && this._activate(i);
          } else {
            if (
              this._activeTarget &&
              t < this._offsets[0] &&
              this._offsets[0] > 0
            )
              return (this._activeTarget = null), void this._clear();
            for (let o = this._offsets.length; o--; ) {
              this._activeTarget !== this._targets[o] &&
                t >= this._offsets[o] &&
                (typeof this._offsets[o + 1] === "undefined" ||
                  t < this._offsets[o + 1]) &&
                this._activate(this._targets[o]);
            }
          }
        }),
        (t._activate = function (e) {
          (this._activeTarget = e), this._clear();
          const t = this._selector.split(",").map(function (t) {
              return (
                `${t  }[data-target="${  e  }"],${  t  }[href="${  e  }"]`
              );
            });
            const n = g([].slice.call(document.querySelectorAll(t.join(","))));
          n.hasClass(vn)
            ? (n.closest(Dn).find(wn).addClass(yn), n.addClass(yn))
            : (n.addClass(yn),
              n
                .parents(Cn)
                .prev(`${Tn  }, ${  Sn}`)
                .addClass(yn),
              n.parents(Cn).prev(bn).children(Tn).addClass(yn)),
            g(this._scrollElement).trigger(pn.ACTIVATE, { relatedTarget: e });
        }),
        (t._clear = function () {
          [].slice
            .call(document.querySelectorAll(this._selector))
            .filter(function (t) {
              return t.classList.contains(yn);
            })
            .forEach(function (t) {
              return t.classList.remove(yn);
            });
        }),
        (n._jQueryInterface = function (e) {
          return this.each(function () {
            let t = g(this).data(fn);
            if (
              (t ||
                ((t = new n(this, typeof e === "object" && e)),
                g(this).data(fn, t)),
              typeof e === "string")
            ) {
              if (typeof t[e] === "undefined")
                throw new TypeError(`No method named "${  e  }"`);
              t[e]();
            }
          });
        }),
        s(n, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "Default",
            get () {
              return _n;
            },
          },
        ]),
        n
      );
    })();
  g(window).on(pn.LOAD_DATA_API, function () {
    for (
      let t = [].slice.call(document.querySelectorAll(En)), e = t.length;
      e--;

    ) {
      const n = g(t[e]);
      On._jQueryInterface.call(n, n.data());
    }
  }),
    (g.fn[un] = On._jQueryInterface),
    (g.fn[un].Constructor = On),
    (g.fn[un].noConflict = function () {
      return (g.fn[un] = gn), On._jQueryInterface;
    });
  const kn = "bs.tab";
    const Pn = `.${  kn}`;
    const Ln = g.fn.tab;
    const jn = {
      HIDE: `hide${  Pn}`,
      HIDDEN: `hidden${  Pn}`,
      SHOW: `show${  Pn}`,
      SHOWN: `shown${  Pn}`,
      CLICK_DATA_API: `click${  Pn  }.data-api`,
    };
    const Hn = "dropdown-menu";
    const Rn = "active";
    const xn = "disabled";
    const Fn = "fade";
    const Un = "show";
    const Wn = ".dropdown";
    const qn = ".nav, .list-group";
    const Mn = ".active";
    const Kn = "> li > .active";
    const Qn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]';
    const Bn = ".dropdown-toggle";
    const Vn = "> .dropdown-menu .active";
    const Yn = (function () {
      function i(t) {
        this._element = t;
      }
      const t = i.prototype;
      return (
        (t.show = function () {
          const n = this;
          if (
            !(
              (this._element.parentNode &&
                this._element.parentNode.nodeType === Node.ELEMENT_NODE &&
                g(this._element).hasClass(Rn)) ||
              g(this._element).hasClass(xn)
            )
          ) {
            let t;
              let i;
              const e = g(this._element).closest(qn)[0];
              const o = _.getSelectorFromElement(this._element);
            if (e) {
              const r = e.nodeName === "UL" || e.nodeName === "OL" ? Kn : Mn;
              i = (i = g.makeArray(g(e).find(r)))[i.length - 1];
            }
            const s = g.Event(jn.HIDE, { relatedTarget: this._element });
              const a = g.Event(jn.SHOW, { relatedTarget: i });
            if (
              (i && g(i).trigger(s),
              g(this._element).trigger(a),
              !a.isDefaultPrevented() && !s.isDefaultPrevented())
            ) {
              o && (t = document.querySelector(o)),
                this._activate(this._element, e);
              const l = function () {
                const t = g.Event(jn.HIDDEN, { relatedTarget: n._element });
                  const e = g.Event(jn.SHOWN, { relatedTarget: i });
                g(i).trigger(t), g(n._element).trigger(e);
              };
              t ? this._activate(t, t.parentNode, l) : l();
            }
          }
        }),
        (t.dispose = function () {
          g.removeData(this._element, kn), (this._element = null);
        }),
        (t._activate = function (t, e, n) {
          function i() {
            return o._transitionComplete(t, r, n);
          }
          var o = this;
            var r = (
              !e || (e.nodeName !== "UL" && e.nodeName !== "OL")
                ? g(e).children(Mn)
                : g(e).find(Kn)
            )[0];
            const s = n && r && g(r).hasClass(Fn);
          if (r && s) {
            const a = _.getTransitionDurationFromElement(r);
            g(r)
              .removeClass(Un)
              .one(_.TRANSITION_END, i)
              .emulateTransitionEnd(a);
          } else i();
        }),
        (t._transitionComplete = function (t, e, n) {
          if (e) {
            g(e).removeClass(Rn);
            const i = g(e.parentNode).find(Vn)[0];
            i && g(i).removeClass(Rn),
              e.getAttribute("role") === "tab" &&
                e.setAttribute("aria-selected", !1);
          }
          if (
            (g(t).addClass(Rn),
            t.getAttribute("role") === "tab" &&
              t.setAttribute("aria-selected", !0),
            _.reflow(t),
            t.classList.contains(Fn) && t.classList.add(Un),
            t.parentNode && g(t.parentNode).hasClass(Hn))
          ) {
            const o = g(t).closest(Wn)[0];
            if (o) {
              const r = [].slice.call(o.querySelectorAll(Bn));
              g(r).addClass(Rn);
            }
            t.setAttribute("aria-expanded", !0);
          }
          n && n();
        }),
        (i._jQueryInterface = function (n) {
          return this.each(function () {
            const t = g(this);
              let e = t.data(kn);
            if (
              (e || ((e = new i(this)), t.data(kn, e)), typeof n === "string")
            ) {
              if (typeof e[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              e[n]();
            }
          });
        }),
        s(i, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
        ]),
        i
      );
    })();
  g(document).on(jn.CLICK_DATA_API, Qn, function (t) {
    t.preventDefault(), Yn._jQueryInterface.call(g(this), "show");
  }),
    (g.fn.tab = Yn._jQueryInterface),
    (g.fn.tab.Constructor = Yn),
    (g.fn.tab.noConflict = function () {
      return (g.fn.tab = Ln), Yn._jQueryInterface;
    });
  const zn = "toast";
    const Xn = "bs.toast";
    const $n = `.${  Xn}`;
    const Gn = g.fn[zn];
    const Jn = {
      CLICK_DISMISS: `click.dismiss${  $n}`,
      HIDE: `hide${  $n}`,
      HIDDEN: `hidden${  $n}`,
      SHOW: `show${  $n}`,
      SHOWN: `shown${  $n}`,
    };
    const Zn = "fade";
    const ti = "hide";
    const ei = "show";
    const ni = "showing";
    const ii = { animation: "boolean", autohide: "boolean", delay: "number" };
    const oi = { animation: !0, autohide: !0, delay: 500 };
    const ri = '[data-dismiss="toast"]';
    const si = (function () {
      function i(t, e) {
        (this._element = t),
          (this._config = this._getConfig(e)),
          (this._timeout = null),
          this._setListeners();
      }
      const t = i.prototype;
      return (
        (t.show = function () {
          const t = this;
            const e = g.Event(Jn.SHOW);
          if ((g(this._element).trigger(e), !e.isDefaultPrevented())) {
            this._config.animation && this._element.classList.add(Zn);
            const n = function () {
              t._element.classList.remove(ni),
                t._element.classList.add(ei),
                g(t._element).trigger(Jn.SHOWN),
                t._config.autohide &&
                  (t._timeout = setTimeout(function () {
                    t.hide();
                  }, t._config.delay));
            };
            if (
              (this._element.classList.remove(ti),
              _.reflow(this._element),
              this._element.classList.add(ni),
              this._config.animation)
            ) {
              const i = _.getTransitionDurationFromElement(this._element);
              g(this._element).one(_.TRANSITION_END, n).emulateTransitionEnd(i);
            } else n();
          }
        }),
        (t.hide = function () {
          if (this._element.classList.contains(ei)) {
            const t = g.Event(Jn.HIDE);
            g(this._element).trigger(t),
              t.isDefaultPrevented() || this._close();
          }
        }),
        (t.dispose = function () {
          clearTimeout(this._timeout),
            (this._timeout = null),
            this._element.classList.contains(ei) &&
              this._element.classList.remove(ei),
            g(this._element).off(Jn.CLICK_DISMISS),
            g.removeData(this._element, Xn),
            (this._element = null),
            (this._config = null);
        }),
        (t._getConfig = function (t) {
          return (
            (t = l(
              {},
              oi,
              {},
              g(this._element).data(),
              {},
              typeof t === "object" && t ? t : {}
            )),
            _.typeCheckConfig(zn, t, this.constructor.DefaultType),
            t
          );
        }),
        (t._setListeners = function () {
          const t = this;
          g(this._element).on(Jn.CLICK_DISMISS, ri, function () {
            return t.hide();
          });
        }),
        (t._close = function () {
          function t() {
            e._element.classList.add(ti), g(e._element).trigger(Jn.HIDDEN);
          }
          var e = this;
          if ((this._element.classList.remove(ei), this._config.animation)) {
            const n = _.getTransitionDurationFromElement(this._element);
            g(this._element).one(_.TRANSITION_END, t).emulateTransitionEnd(n);
          } else t();
        }),
        (i._jQueryInterface = function (n) {
          return this.each(function () {
            const t = g(this);
              let e = t.data(Xn);
            if (
              (e ||
                ((e = new i(this, typeof n === "object" && n)), t.data(Xn, e)),
              typeof n === "string")
            ) {
              if (typeof e[n] === "undefined")
                throw new TypeError(`No method named "${  n  }"`);
              e[n](this);
            }
          });
        }),
        s(i, null, [
          {
            key: "VERSION",
            get () {
              return "4.4.1";
            },
          },
          {
            key: "DefaultType",
            get () {
              return ii;
            },
          },
          {
            key: "Default",
            get () {
              return oi;
            },
          },
        ]),
        i
      );
    })();
  (g.fn[zn] = si._jQueryInterface),
    (g.fn[zn].Constructor = si),
    (g.fn[zn].noConflict = function () {
      return (g.fn[zn] = Gn), si._jQueryInterface;
    }),
    (t.Alert = v),
    (t.Button = H),
    (t.Carousel = ut),
    (t.Collapse = wt),
    (t.Dropdown = ee),
    (t.Modal = Te),
    (t.Popover = hn),
    (t.Scrollspy = On),
    (t.Tab = Yn),
    (t.Toast = si),
    (t.Tooltip = Xe),
    (t.Util = _),
    Object.defineProperty(t, "__esModule", { value: !0 });
});
// # sourceMappingURL=bootstrap.min.js.map
